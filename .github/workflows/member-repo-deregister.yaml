name: Desapuntar repositorio de miembro
run-name: "Desapuntar repositorio '${{ github.event.client_payload.repository.name }}'"

on:
  repository_dispatch:
    types: 
      - member-repo-deleted

env:
  FILE: repo-miembros.json
  BRANCH: plantillas
  WORK_DIR: repo

jobs:
  desapuntar-repositorio:
    runs-on: ubuntu-latest
    steps:
      - name: Obtener rama principal del repositorio
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.ORGANIZATION_ACCESS_TOKEN }}
          path: main

      - name: Depurar evento
        if: false
        uses: ./main/.github/actions/info-debug
        with:
          event: ${{ toJson(github.event) }}
          event-name: ${{ github.event.action }}
          github-token: ${{ secrets.ORGANIZATION_ACCESS_TOKEN }}

      - name: Obtener repositorio
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BRANCH }}
          token:  ${{ secrets.ORGANIZATION_ACCESS_TOKEN }}
          path: ${{ env.WORK_DIR }}

      - name: Generar nueva lista
        uses: actions/github-script@v7
        id: get-list
        with:
          github-token: ${{ secrets.ORGANIZATION_ACCESS_TOKEN }}
          result-encoding: json
          script: |
            process.chdir(process.env.WORK_DIR);

            const fs = require('fs');
            const archivo = process.env.FILE;

            const repoRegistrados = fs.existsSync(archivo)
              ? JSON.parse(fs.readFileSync(archivo, "utf8"))
              : [];

            const eliminado = '${{ github.event.client_payload.repository.name }}';
            const result = repoRegistrados.filter(r => r.name !== eliminado);

            if(repoRegistrados.length === result.length) {
              core.warning(`❌ ${eliminado} no aparecía registrado`);
              return null;
            }

            return result;

      - name: Registrar nueva lista
        if: ${{ steps.get-list.outputs.result != 'null' }}
        uses: ./main/.github/actions/save-list
        with:
          content: ${{ steps.get-list.outputs.result }}
          file: ${{ env.FILE }}
          branch: ${{ env.BRANCH }}
          path: ${{ env.WORK_DIR }}
          message: "Desapuntar el repositorio '${{ github.event.client_payload.repository.name }}'"
          github-token: ${{ secrets.ORGANIZATION_ACCESS_TOKEN }}